# instant prompt
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# add fpath
export FPATH="$HOME/.local/share/zsh/site-functions:$FPATH"

# zim
HISTFILE="$HOME/.zsh_history"
setopt HIST_IGNORE_ALL_DUPS
# Set editor default keymap to emacs (`-e`) or vi (`-v`)
# bindkey -v
WORDCHARS=${WORDCHARS//[\/]}

zstyle ':zim:zmodule' use 'degit'
ZSH_AUTOSUGGEST_MANUAL_REBIND=1
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets)

ZIM_HOME=${ZDOTDIR:-${HOME}}/.zim
# Download zimfw plugin manager if missing.
if [[ ! -e ${ZIM_HOME}/zimfw.zsh ]]; then
  if (( ${+commands[curl]} )); then
    curl -fsSL --create-dirs -o ${ZIM_HOME}/zimfw.zsh \
        https://github.com/zimfw/zimfw/releases/latest/download/zimfw.zsh
  else
    mkdir -p ${ZIM_HOME} && wget -nv -O ${ZIM_HOME}/zimfw.zsh \
        https://github.com/zimfw/zimfw/releases/latest/download/zimfw.zsh
  fi
fi
# Install missing modules, and update ${ZIM_HOME}/init.zsh if missing or outdated.
if [[ ! ${ZIM_HOME}/init.zsh -nt ${ZDOTDIR:-${HOME}}/.zimrc ]]; then
  source ${ZIM_HOME}/zimfw.zsh init -q
fi
# Initialize modules.
source ${ZIM_HOME}/init.zsh
# end of zim init

bindkey "$terminfo[kcuu1]" history-substring-search-up
bindkey "$terminfo[kcud1]" history-substring-search-down

# WSLg
export DISPLAY=:0

# common private bin path
if [ -d "$HOME/bin" ] ; then
    export PATH="$HOME/bin:$PATH"
fi
if [ -d "$HOME/.local/bin" ] ; then
    export PATH="$HOME/.local/bin:$PATH"
fi
if [ -d "$HOME/.asdf/shims" ]; then
	export PATH="$HOME/.asdf/shims:$PATH"
fi

# vim
export EDITOR="vi"
alias v='vim -u NONE'

# haskell
[ -f "$HOME/.ghcup/env" ] && source "$HOME/.ghcup/env" # ghcup-env

# rust
if [ -d "$HOME/.cargo/bin" ]; then
	export PATH="$HOME/.cargo/bin:$PATH"
	. "$HOME/.cargo/env"
fi

# z (by rust)
eval "$(zoxide init zsh)"

# git
alias gf="git fetch --all"
alias ga="git add --a"
alias gs="git status"
alias gcm="git commit -m"
alias gpush='git push -u origin $(git rev-parse --abbrev-ref HEAD)'
alias gpull='git pull origin $(git rev-parse --abbrev-ref HEAD)'
alias gitloggraph='git log --graph --abbrev-commit --decorate --date=relative --all'

# ops
alias tf="terraform"
alias d="docker"
alias dc="docker-compose"
alias k="kubectl"
# K8s completion
if [ -f /usr/local/bin/kubectl ]; then
  source <(kubectl completion zsh)
  complete -F __start_kubectl k
fi

# custom cmd
alias ll='ls -al'
alias lhalt='ls -haltr'
alias dufile='du -d 0 -h $(ls -A) | sort -rh | head -n 20'
alias tracert="traceroute"
alias chez="chezmoi"

# shell related
alias vz="vi ~/.zshrc"
alias es="exec $SHELL"

# mise
[ -f "$HOME/.local/bin/mise" ] && eval "$($HOME/.local/bin/mise activate zsh)"

# pnpm
if [ -d "$HOME/.local/share/pnpm" ] ; then
  alias p="pnpm"
  export PNPM_HOME="$HOME/.local/share/pnpm"
  export PATH="$PNPM_HOME:$PATH"
fi

# bun
if [ -d "$HOME/.bun" ] ; then
  [ -s "$HOME/.bun/_bun" ] && source "$HOME/.bun/_bun"
  export BUN_INSTALL="$HOME/.bun"
  export PATH="$BUN_INSTALL/bin:$PATH"
fi

# cuda
if [ -d "/usr/local/cuda" ] ; then
  export CUDA_HOME="/usr/local/cuda"
  export PATH="$CUDA_HOME/bin:$PATH"
  export LD_LIBRARY_PATH="$CUDA_HOME/lib64:$LD_LIBRARY_PATH"
fi

# mac
if [[ $(uname) == "Darwin" ]]; then
  export PATH="$PATH:/Applications/Visual Studio Code.app/Contents/Resources/app/bin"
  alias subl="/Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl"
fi

# nix
if [ -e $HOME/.nix-profile/etc/profile.d/nix.sh ]; then . $HOME/.nix-profile/etc/profile.d/nix.sh; fi

# remove duplicate in path
typeset -U path

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

